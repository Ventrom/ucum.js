{
  helpers = require('../lib/helpers');
  prefixes = require('./prefixes.json');
  metrics = require('./metrics.json');
  multiply = helpers.multiply;
  topower = helpers.topower;
  cleanup = helpers.cleanup;
  ismetric = helpers.ismetric(metrics);
}

start = e:ucumExpr {
  return e ; // cleanup(e);
}

ucumExpr = "/" e:expr {return multiply({value:1, units:{}}, [["/", e]]);} / expr

multiply  = "." term /  "/" term

expr =  t:term ms:(multiply)* {
  return multiply(t, ms);
}

term = e:element exp:(exponent)? (ANN)* {
  return topower(e, exp);
}
element  =  a:ANN? u:simpleUnit {return u;} /  "(" e:expr ")" {return e;} / ANN

exponent =  s:([+-])? d:DIGITS {return (s=="-") ? (-1*d) : d}

simpleUnit =  p:PREFIX? a:METRICATOM !{return(p && !ismetric(a));} {
  var ret = a;
  if (p) ret.value = ret.value * prefixes[p];
  return ret;
} / METRICATOM / d:DIGITS {
 var ret = {
    value: d,
    units: {}
  };
  return ret;
}


DIGITS = v:[0-9]+ 'e'? e:exponent?  {
  return parseInt(v.join(""))*Math.pow(10, e||0);
} 

ANN = "{" m:[^}]+ "}" { return {value: 1, units:{}} }

METRICATOM = {{METRICATOM}}
PREFIX = {{PREFIX}}
